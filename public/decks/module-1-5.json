{
  "name": "IAM Basics and Policy Structure",
  "description": "Covers foundational IAM concepts including users, groups, and policy definitions",
  "category": "Security",
  "cards": [
    {
      "id": "a7h3d2q9jz",
      "front": "A new employee joins your AWS development team. You want to ensure they receive the same access permissions as other developers. What is the most scalable and efficient way to manage their permissions?",
      "back": "Add the employee to an IAM group that has the appropriate permissions attached. IAM groups allow centralized and scalable permission management.",
      "example": "Instead of attaching a policy to each user individually, adding new developers to a 'Developers' group automatically grants them access to services like Amazon S3 and Lambda needed for development tasks.",
      "mnemonic": "Group = Grant Once, Reuse Often",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["IAM", "groups", "permissions"]
    },
    {
      "id": "xk9m3b7fqp",
      "front": "You want to allow users in your AWS account to log in using credentials from your corporate directory. Which IAM feature enables this functionality?",
      "back": "IAM Identity Federation allows users to access AWS using external credentials, such as from a corporate directory or identity provider.",
      "example": "Your organization uses Microsoft Active Directory. By configuring identity federation, employees can log in to the AWS Management Console using their AD credentials.",
      "mnemonic": "Federation = Foreign credentials, Familiar access",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "intermediate",
      "tags": ["IAM", "federation", "authentication"]
    },
    {
      "id": "9vlw5zcxyt",
      "front": "An IAM user is created and granted access to AWS services using CLI tools. What type of credentials should they receive?",
      "back": "They should receive programmatic access credentials, which consist of an access key ID and secret access key.",
      "example": "A developer running deployment scripts via the AWS CLI requires an access key pair to authenticate programmatically.",
      "mnemonic": "CLI = Credential Login Internally (Access Key + Secret Key)",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["IAM", "credentials", "programmatic access"]
    },
    {
      "id": "n2q8v0uflw",
      "front": "An IAM policy allows the action 'iam:GetUser' only for the user who is logged in. What feature in the policy supports this behavior?",
      "back": "The policy uses variable substitution with '${aws:username}' in the Resource element to restrict access to the calling userâ€™s own identity.",
      "example": "A self-service IAM policy allows each user to view their own information but not that of others.",
      "mnemonic": "Username variable = User-specific visibility",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "intermediate",
      "tags": ["IAM", "policy", "variable substitution"]
    },
    {
      "id": "z3p4b7wycx",
      "front": "You need to define who can do what on which resources in AWS. Which IAM component lets you specify these permissions?",
      "back": "IAM Policies define permissions by specifying Effect, Action, and Resource elements within JSON-based documents.",
      "example": "To grant read-only access to S3 buckets, an IAM policy might include 'Effect: Allow', 'Action: s3:GetObject', and 'Resource: arn:aws:s3:::bucket-name/*'.",
      "mnemonic": "EAR = Effect, Action, Resource",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["IAM", "policy", "permissions"]
    },
    {
      "id": "gt4n86kqpb",
      "front": "A company wants to ensure that users change their passwords regularly and meet complexity requirements. Which IAM feature should they configure?",
      "back": "They should configure an IAM password policy to enforce password rotation and complexity standards.",
      "example": "An organization sets a password policy requiring users to change passwords every 90 days with a minimum of 12 characters including numbers and symbols.",
      "mnemonic": "Policy for Password = P4P",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["IAM", "password policy", "security"]
    },
    {
      "id": "mjy5rhd49t",
      "front": "An IAM user is created but cannot perform any actions in the AWS account. Why?",
      "back": "IAM users have no permissions by default and require policies to be attached directly or via group membership to gain access.",
      "example": "A new user logs into the AWS Console but cannot view any S3 buckets until a read-only policy is attached.",
      "mnemonic": "No Policy = No Power",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["IAM", "user", "permissions"]
    },
    {
      "id": "tqpmx2w3bj",
      "front": "You need a way to manage access for thousands of IAM users more efficiently. What is the AWS-recommended approach?",
      "back": "Use IAM groups to assign policies to collections of users based on job functions. This simplifies management and ensures consistent permissions.",
      "example": "You assign all security engineers to a 'SecurityTeam' group, which has policies granting access to IAM and CloudTrail services.",
      "mnemonic": "Group Think = Scalable Sync",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "intermediate",
      "tags": ["IAM", "group", "best practices"]
    },
    {
      "id": "v95h1qcrlm",
      "front": "You notice that an IAM policy has '*' for both Action and Resource. What level of access does this represent?",
      "back": "It grants full administrative access, allowing all actions on all resources within the AWS account.",
      "example": "A user with this policy can delete S3 buckets, terminate EC2 instances, and modify IAM roles without restriction.",
      "mnemonic": "* + * = Superuser",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "expert",
      "tags": ["IAM", "policy", "admin access"]
    },
    {
      "id": "rsh1vnk08d",
      "front": "You need to enforce a second layer of authentication beyond username and password for sensitive AWS accounts. Which IAM feature enables this?",
      "back": "Enable Multi-Factor Authentication (MFA) for the IAM user or root account to add an extra layer of security.",
      "example": "MFA requires entering a time-based one-time code from an app like Authy or a hardware token in addition to the usual login credentials.",
      "mnemonic": "MFA = Must Further Authenticate",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "intermediate",
      "tags": ["IAM", "MFA", "authentication"]
    },
    {
      "id": "h37d9xkq8v",
      "front": "You're reviewing an IAM policy to grant access to a user. What three required elements must each policy statement include to define permissions?",
      "back": "Each IAM policy statement must include: Effect (Allow or Deny), Action (what the identity can do), and Resource (what the action applies to).",
      "example": "A policy with 'Effect': 'Deny', 'Action': 'iam:CreateUser', and 'Resource': 'arn:aws:iam::123456789012:user/Bob' denies the user permission to create IAM users.",
      "mnemonic": "EAR = Effect, Action, Resource",
      "category": "Security",
      "subject": "Introduction to AWS Identity and Access Management",
      "course": "AWS Cloud Technical Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["IAM", "policy", "permissions", "structure"],
      "createdOn": "2025-07-08"
    }
  ]
}
