{
  "name": "Amazon SNS Overview",
  "description": "Covers the publish/subscribe messaging pattern and topic-based message delivery in Amazon SNS.",
  "category": "Messaging & Notifications",
  "cards": [
    {
      "id": "a7k9N4pLz1",
      "front": "A startup wants to notify different teams when a deployment finishes. Some teams want deployment logs, others only status updates. How can they use Amazon SNS to satisfy all preferences without building multiple systems?",
      "back": "By creating separate SNS topics (e.g., 'DeploymentLogs', 'DeploymentStatus') and allowing teams to subscribe to only the topics they need. Amazon SNS supports topic-based filtering and fan-out messaging to match varied subscriber preferences.",
      "example": "The QA team subscribes to the 'DeploymentLogs' topic for detailed info, while the business team subscribes only to 'DeploymentStatus'.",
      "mnemonic": "SNS = Smart Notification Subscriptions",
      "category": "Messaging & Notifications",
      "subject": "Amazon Simple Notification Service (Amazon SNS)",
      "course": "AWS Cloud Practitioner Essentials",
      "module": "Module 1",
      "difficulty": "intermediate",
      "tags": ["SNS", "messaging", "notifications", "topics", "pub-sub"],
      "createdOn": "2025-07-18",
      "glossary": [
        {
          "term": "Amazon SNS",
          "definition": "A fully managed messaging service for pub-sub communication between applications."
        },
        {
          "term": "Publisher",
          "definition": "The entity that sends messages to an SNS topic."
        },
        {
          "term": "Subscriber",
          "definition": "The endpoint or application that receives messages from an SNS topic."
        },
        {
          "term": "Topic",
          "definition": "A logical access point for publishing and subscribing to messages in SNS."
        }
      ]
    },
    {
      "id": "z5uE9bTqVm",
      "front": "A marketing platform wants to send emails about discounts, trivia, and new releases. How can it use Amazon SNS to ensure customers receive only content they care about?",
      "back": "It can set up separate SNS topics for 'Discounts', 'Trivia', and 'Product Launches'. Customers subscribe only to the topics relevant to their interests. SNS then delivers only those messages to each subscriber.",
      "example": "A customer subscribes only to the 'Discounts' topic and receives no emails about trivia or new products.",
      "mnemonic": "Topic Tags Target Tastes",
      "category": "Messaging & Notifications",
      "subject": "Amazon Simple Notification Service (Amazon SNS)",
      "course": "AWS Cloud Practitioner Essentials",
      "module": "Module 1",
      "difficulty": "beginner",
      "tags": ["SNS", "subscription", "topic filtering"],
      "createdOn": "2025-07-18",
      "glossary": [
        {
          "term": "Topic-based Messaging",
          "definition": "SNS allows messages to be categorized into topics so subscribers only receive relevant content."
        },
        {
          "term": "Publish/Subscribe Model",
          "definition": "A messaging pattern where senders (publishers) send messages to topics that subscribers listen to."
        }
      ]
    },
    {
      "id": "X3oW6bQmP7",
      "front": "You're tasked with integrating a messaging service into an e-commerce app to notify users via email and SMS about order updates. How can Amazon SNS help you achieve this efficiently?",
      "back": "Amazon SNS supports multiple endpoint types, allowing you to send messages to email addresses, phone numbers (SMS), or even AWS Lambda functions from a single topic. Publish once, and all endpoints are notified simultaneously.",
      "example": "Publishing an order update to the 'OrderUpdates' topic notifies the user via both email and SMS automatically.",
      "mnemonic": "SNS = Send News Simultaneously",
      "category": "Messaging & Notifications",
      "subject": "Amazon Simple Notification Service (Amazon SNS)",
      "course": "AWS Cloud Practitioner Essentials",
      "module": "Module 1",
      "difficulty": "intermediate",
      "tags": ["SNS", "multichannel", "email", "SMS", "Lambda"],
      "createdOn": "2025-07-18",
      "glossary": [
        {
          "term": "Multi-protocol Messaging",
          "definition": "SNS can send messages to different endpoint types like HTTP/S, email, SMS, Lambda, and more."
        },
        {
          "term": "Fan-out",
          "definition": "A pattern where a single message is delivered to multiple endpoints or services."
        }
      ]
    }
  ]
}
